{"version":3,"sources":["components/ContactForm/ContactForm.module.css","App.module.css","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/ContactList.js","App.js","index.js"],"names":["module","exports","ContactForm","state","name","number","handleInputChange","e","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","formReset","className","s","form","this","label","htmlFor","type","placeholder","onChange","button","Component","Filter","ContactList","contacts","onDeleteContact","map","id","onClick","initialData","App","filter","createContact","alert","findSameName","newContact","uuidv4","find","contact","toLowerCase","deleteContact","prev","changeFilter","getVisiblesContacts","normalizeFilter","includes","data","localStorage","getItem","parsedData","JSON","parse","length","prevProps","prevState","setItem","stringify","filtredContacts","container","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c94d7599.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__w8sXg\",\"label\":\"ContactForm_label__2znAy\",\"button\":\"ContactForm_button__2vEMr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__A_ae0\"};","import { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport s from './ContactForm.module.css';\n\nclass ContactForm extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n\n  handleInputChange = e => {\n    const { name, value } = e.currentTarget;\n    this.setState({ [name]: value });\n  };\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.onSubmit(this.state);\n    this.formReset();\n  };\n  formReset = () => {\n    this.setState({ name: '', number: '' });\n  };\n\n  render() {\n    return (\n      <form className={s.form} onSubmit={this.handleSubmit}>\n        <label className={s.label} htmlFor=\"\">\n          Name\n          <input\n            type=\"text\"\n            name=\"name\"\n            placeholder=\"Enter name..\"\n            value={this.state.name}\n            onChange={this.handleInputChange}\n          ></input>\n        </label>\n        <label className={s.label} htmlFor=\"\">\n          Number\n          <input\n            type=\"tel\"\n            name=\"number\"\n            placeholder=\"Enter phone number..\"\n            value={this.state.number}\n            onChange={this.handleInputChange}\n          ></input>\n        </label>\n        <button className={s.button} type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n\nContactForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default ContactForm;\n","import PropTypes from 'prop-types';\nimport './Filter.module.css';\n\nconst Filter = ({ value, onChange }) => {\n  return (\n    <label>\n      Find contacts by name\n      <input\n        type=\"text\"\n        placeholder=\"...\"\n        value={value}\n        onChange={onChange}\n      ></input>\n    </label>\n  );\n};\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n};\n\nexport default Filter;\n","import PropTypes from 'prop-types';\nimport './ContactList.module.css';\n\nconst ContactList = ({ contacts, onDeleteContact }) => (\n  <ul>\n    {contacts.map(({ id, name, number }) => (\n      <li key={id}>\n        <p>\n          {name}: {number}\n        </p>\n        <button\n          type=\"button\"\n          onClick={() => {\n            onDeleteContact(id);\n          }}\n        >\n          Delete\n        </button>\n      </li>\n    ))}\n  </ul>\n);\n\nContactList.propTypes = {\n  contacts: PropTypes.array.isRequired,\n  onDeleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactList;\n","import { Component } from 'react';\nimport s from './App.module.css';\nimport { v4 as uuidv4 } from 'uuid';\nimport ContactForm from './components/ContactForm';\nimport Filter from './components/Filter';\nimport ContactList from './components/ContactList';\n\nconst initialData = [{ id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n{ id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n{ id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n{ id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },]\n\nclass App extends Component {\n  state = {\n    contacts: [],\n    filter: '',\n  };\n\n  componentDidMount(){\n    const data = localStorage.getItem('contacts');\n    const parsedData = JSON.parse(data);\n    parsedData.length===0?this.setState({contacts: initialData}):this.setState({contacts: parsedData});\n  }\n\n  componentDidUpdate(prevProps, prevState){\n    if(this.state.contacts !== prevState.contacts){\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts))\n    }\n  }\n\n  createContact = ({ name, number }) => {\n    if (!name || !number) {\n      return alert(`Some field is empty.`);\n    }\n    const sameName = this.findSameName(name);\n    if (sameName) {\n      return alert(`${name} is already in contacts.`);\n    }\n    const newContact = {\n      id: uuidv4(),\n      name,\n      number,\n    };\n    this.setState(({ contacts }) => ({ contacts: [...contacts, newContact] }));\n  };\n\n  findSameName = name => {\n    const { contacts } = this.state;\n    return contacts.find(\n      contact => contact.name.toLowerCase() === name.toLowerCase(),\n    );\n  };\n\n  deleteContact = id => {\n    this.setState(prev => ({\n      contacts: prev.contacts.filter(contact => contact.id !== id),\n    }));\n  };\n\n  changeFilter = e => {\n    const { value } = e.currentTarget;\n    this.setState({ filter: value });\n  };\n\n  getVisiblesContacts = () => {\n    const { contacts, filter } = this.state;\n    const normalizeFilter = filter.toLowerCase();\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizeFilter),\n    );\n  };\n\n  render() {\n    const { filter } = this.state;\n    const filtredContacts = this.getVisiblesContacts();\n\n    return (\n      <div className={s.container}>\n        <h1>Phonebook</h1>\n        <ContactForm onSubmit={this.createContact} />\n        <h2>Contacts</h2>\n        <Filter value={filter} onChange={this.changeFilter} />\n        <ContactList\n          contacts={filtredContacts}\n          onDeleteContact={this.deleteContact}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}